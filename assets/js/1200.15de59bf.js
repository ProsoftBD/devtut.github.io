(window.webpackJsonp=window.webpackJsonp||[]).push([[1200],{1546:function(a,e,s){"use strict";s.r(e);var t=s(19),r=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"logging"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logging"}},[a._v("#")]),a._v(" Logging")]),a._v(" "),s("p",[a._v("Logging in Haskell is achieved usually through functions in the "),s("code",[a._v("IO")]),a._v(' monad, and so is limited to non-pure functions or "IO actions".')]),a._v(" "),s("p",[a._v("There are several ways to log information in a Haskell program: from "),s("code",[a._v("putStrLn")]),a._v(" (or "),s("code",[a._v("print")]),a._v("), to libraries such as "),s("a",{attrs:{href:"https://hackage.haskell.org/package/hslogger",target:"_blank",rel:"noopener noreferrer"}},[a._v("hslogger"),s("OutboundLink")],1),a._v(" or through "),s("code",[a._v("Debug.Trace")]),a._v(".")]),a._v(" "),s("h2",{attrs:{id:"logging-with-hslogger"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logging-with-hslogger"}},[a._v("#")]),a._v(" Logging with hslogger")]),a._v(" "),s("p",[a._v("The "),s("code",[a._v("hslogger")]),a._v(" module provides a similar API to Python's "),s("code",[a._v("logging")]),a._v(" framework, and supports hierarchically named loggers, levels and redirection to handles outside of "),s("code",[a._v("stdout")]),a._v(" and "),s("code",[a._v("stderr")]),a._v(".")]),a._v(" "),s("p",[a._v("By default, all messages of level "),s("code",[a._v("WARNING")]),a._v(" and above are sent to stderr and all other log levels are ignored.")]),a._v(" "),s("div",{staticClass:"language-hs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-hs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token import_statement"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v("           System.Log.Logger")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("Priority")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("DEBUG")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("debugM")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("infoM")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("setLevel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n                                    "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("updateGlobalLogger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("warningM")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("main")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("debugM")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"MyProgram.main"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"This won\'t be seen"')]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("infoM")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"MyProgram.main"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"This won\'t be seen either"')]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token hvariable"}},[a._v("warningM")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"MyProgram.main"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"This will be seen"')]),a._v("\n\n")])])]),s("p",[a._v("We can set the level of a logger by its name using "),s("code",[a._v("updateGlobalLogger")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('\n updateGlobalLogger "MyProgram.main" (setLevel DEBUG)\n\n  debugM "MyProgram.main" "This will now be seen"\n\n')])])]),s("p",[a._v("Each Logger has a name, and they are arranged hierarchically, so "),s("code",[a._v("MyProgram")]),a._v(" is a parent of "),s("code",[a._v("MyParent.Module")]),a._v(".")])])}),[],!1,null,null,null);e.default=r.exports}}]);