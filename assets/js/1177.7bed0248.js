(window.webpackJsonp=window.webpackJsonp||[]).push([[1177],{1525:function(s,a,t){"use strict";t.r(a);var e=t(19),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"data-aeson-json-in-haskell"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#data-aeson-json-in-haskell"}},[s._v("#")]),s._v(" Data.Aeson - JSON in Haskell")]),s._v(" "),t("h2",{attrs:{id:"smart-encoding-and-decoding-using-generics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#smart-encoding-and-decoding-using-generics"}},[s._v("#")]),s._v(" Smart Encoding and Decoding using Generics")]),s._v(" "),t("p",[s._v("The easiest and quickest way to encode a Haskell data type to JSON with Aeson is using generics.")]),s._v(" "),t("div",{staticClass:"language-hs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-hs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("{-# LANGUAGE DeriveGeneric #-}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token import_statement"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" GHC.Generics")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token import_statement"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Data.Text")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token import_statement"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Data.Aeson")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token import_statement"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Data.ByteString.Lazy")]),s._v("    \n\n")])])]),t("p",[s._v("First let us create a data type Person:")]),s._v(" "),t("div",{staticClass:"language-hs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-hs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("data")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("firstName")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Text")]),s._v("\n                     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("lastName")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Text")]),s._v("\n                     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("age")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Int")]),s._v(" \n                     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("deriving")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Show")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Generic")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])])]),t("p",[s._v("In order to use the "),t("code",[s._v("encode")]),s._v(" and "),t("code",[s._v("decode")]),s._v(" function from the "),t("code",[s._v("Data.Aeson")]),s._v(" package we need to make "),t("code",[s._v("Person")]),s._v(" an instance of "),t("code",[s._v("ToJSON")]),s._v(" and "),t("code",[s._v("FromJSON")]),s._v(". Since we derive "),t("code",[s._v("Generic")]),s._v(" for "),t("code",[s._v("Person")]),s._v(", we can create empty instances for these classes. The default definitions of the methods are defined in terms of the methods provided by the "),t("code",[s._v("Generic")]),s._v(" type class.")]),s._v(" "),t("div",{staticClass:"language-hs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-hs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instance")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ToJSON")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Person")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instance")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FromJSON")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Person")]),s._v("\n\n")])])]),t("p",[s._v("Done! In order to improve the encoding speed we can slightly change the "),t("code",[s._v("ToJSON")]),s._v(" instance:")]),s._v(" "),t("div",{staticClass:"language-hs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-hs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instance")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ToJSON")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("toEncoding")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("genericToEncoding")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("defaultOptions")]),s._v("\n\n")])])]),t("p",[s._v("Now we can use the "),t("code",[s._v("encode")]),s._v(" function to convert "),t("code",[s._v("Person")]),s._v(" to a (lazy) Bytestring:")]),s._v(" "),t("div",{staticClass:"language-hs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-hs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("encodeNewPerson")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Text")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Text")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ByteString")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("encodeNewPerson")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("first")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("last")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("age")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("encode")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("$")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("first")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("last")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("age")]),s._v("\n\n")])])]),t("p",[s._v("And to decode we can just use "),t("code",[s._v("decode")]),s._v(":")]),s._v(" "),t("div",{staticClass:"language-hs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-hs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("encodeNewPerson")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hans"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Wurst"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{\\"lastName\\":\\"Wurst\\",\\"age\\":30,\\"firstName\\":\\"Hans\\"}"')]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("decode")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("$")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("encodeNewPerson")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hans"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Wurst"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Just")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("firstName")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hans"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("lastName")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Wurst"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("age")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])])]),t("h2",{attrs:{id:"a-quick-way-to-generate-a-data-aeson-value"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-quick-way-to-generate-a-data-aeson-value"}},[s._v("#")]),s._v(" A quick way to generate a Data.Aeson.Value")]),s._v(" "),t("div",{staticClass:"language-hs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-hs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("{-# LANGUAGE OverloadedStrings #-}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("module")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Main")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token import_statement"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Data.Aeson")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("main")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IO")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("main")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("example")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("Data.Aeson.object")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"somethingElse"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Value")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(" . ")]),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("encode")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("$")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("example")]),s._v("\n\n")])])]),t("h2",{attrs:{id:"optional-fields"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#optional-fields"}},[s._v("#")]),s._v(" Optional Fields")]),s._v(" "),t("p",[s._v("Sometimes, we want some fields in the JSON string to be optional. For example,")]),s._v(" "),t("div",{staticClass:"language-hs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-hs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("data")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("firstName")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Text")]),s._v("\n                     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("lastName")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Text")]),s._v("\n                     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("age")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Maybe")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Int")]),s._v(" \n                     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),t("p",[s._v("This can be achieved by")]),s._v(" "),t("div",{staticClass:"language-hs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-hs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token import_statement"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Data.Aeson.TH")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("deriveJSON")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("defaultOptions")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token hvariable"}},[s._v("omitNothingFields")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("True")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" ''"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);